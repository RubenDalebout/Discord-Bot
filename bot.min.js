require("dotenv").config();const Discord=require("discord.js"),config=require("./config.json"),client=new Discord.Client({intents:[Discord.GatewayIntentBits.Guilds,Discord.GatewayIntentBits.GuildMessages,Discord.GatewayIntentBits.MessageContent,Discord.GatewayIntentBits.GuildMembers]}),commands=[{name:"ping",description:"Replies with Pong!"}],rest=new Discord.REST({version:"10"}).setToken(process.env.BOT_TOKEN);(async()=>{try{console.log("Started refreshing application (/) commands."),await rest.put(Discord.Routes.applicationGuildCommands("1052948545818345574","1007372910903693553"),{body:commands}),console.log("Successfully reloaded application (/) commands.")}catch(error){console.error(error)}})(),client.on("ready",()=>{console.log(`Logged in as ${client.user.tag}!`),client.user.setPresence({activities:[{name:config.bot.status.message,type:Discord.ActivityType.Watching}],status:config.bot.status.state})}),client.on("interactionCreate",interaction=>{interaction.isChatInputCommand()&&interaction.reply({content:"Pong"})}),client.on("guildMemberAdd",member=>{const channel=client.channels.cache.get("1007377788132663448"),WelcomeEmbed=(new Discord.EmbedBuilder).setColor(config.bot.colors.primary).setTitle(config.embeds.welcome.title).setDescription(config.embeds.welcome.description.replace("{userID}",`<@${member.user.id}>`)).setThumbnail(member.user.displayAvatarURL()).setTimestamp().setFooter({text:config.server.name});channel.send({embeds:[WelcomeEmbed]})}),client.on("messageCreate",message=>{if("!rules"===message.content&&message.member.roles.cache.some(role=>config.embeds.rules.permission.includes(role.id))){const channel=message.channel,embed=(new Discord.EmbedBuilder).setColor(config.bot.colors.primary).setTitle(config.embeds.rules.title).setThumbnail(config.bot.avatar).setDescription(`\n            ${Object.values(config.embeds.rules.rows).map((row,index)=>`${index+1}. ${row}`).join("\n")}\n\n            ${config.embeds.rules.description}\n            `).setTimestamp().setFooter({text:config.server.name});channel.send({embeds:[embed]}).then(()=>{message.delete()})}}),client.login(process.env.BOT_TOKEN);
//# sourceMappingURL=bot.min.js.map